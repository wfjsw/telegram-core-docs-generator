<%
var isVector = /Vector<([^<^>]+)>/
var extractVector = /(?:Vector<){0,1}([^<^>]+)(?:>){0,1}/
var isFlag = /flags.([0-9]{1,})\?(.+)/
function genSchema(method, id, params, type, includes) {
    var generated = ``
    includes.forEach((line) => {
        var gline = `<a href="../constructor/${line.predicate}">${line.predicate}</a>#${line.id} `
        line.params.forEach((param) => {
            gline += `${param.name}:`
            gline += `${writeType(param.type)} `
        })
        gline += `= ${writeType(line.type)};\n`
        generated += gline
    })
    generated += '\n---functions---\n'
    generated += `<a href="../method/${method}.md">${method}</a>#`
    generated += id + ' '
    params.forEach((param) => {
        generated += `${param.name}:`
        generated += `${writeType(param.type)} `
    })
    generated += `= ${writeType(type)};`
    return generated
}
function writeType(type) {
    var target_type = ""
    if (isFlag.test(type)) {
        var flagrun = isFlag.exec(type)
        target_type = `flags.${flagrun[1]}?`
        var strip_flag = flagrun[2]
    } else strip_flag = type
    if (isVector.test(strip_flag)) {
        var vectorrun = extractVector.exec(strip_flag)
        var strip_vector = vectorrun[1]
        target_type += `Vector&lt;`
        var is_vector = true
    } else {
        var is_vector = false
        strip_vector = strip_flag
    }
    target_type += `<a href="../type/${strip_vector}.md">${strip_vector}</a>`
    if (is_vector) target_type += `&gt;`
    return target_type
}
-%>
# <%= method %>

<%= description %>

<pre>
<%- genSchema(method, id, params, type, includes) -%>
</pre>
<% if (params.length > 0) { -%>
## Parameters

| Name | Type | Description |
|------|:----:|-------------|
<% params.forEach((param) => { -%>
| **<%= param.name %>** | <%- writeType(param.type) %> | <%- params_desc[param.name] %> |
<% }) -%>
<% } -%>

## Result

<%- writeType(type) %>

<% if (errors && errors.length > 0) { -%>
## Possible errors

| Code | Type | Description |
|------|------|-------------|
<% errors.forEach((error) => { -%>
| **<%= error.code %>** | <%= error.type %> | <%- error.description %> |
<% }) -%>
<% } -%>